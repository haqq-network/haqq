syntax = "proto3";
package haqq.coinomics.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "haqq/coinomics/v1/genesis.proto";

option go_package = "github.com/haqq-network/haqq/x/coinomics/types";

// Query provides defines the gRPC querier service.
service Query {
  // MaxSupply retrieves total coins of all eras and when mint ended.
  rpc MaxSupply(QueryMaxSupplyRequest) returns (QueryMaxSupplyResponse) {
    option (google.api.http).get = "/haqqd/coinomics/v1/max_supply";
  }

  // InflationRewardCoefficientRate APY rate for staking rewards
  rpc RewardCoefficient(QueryRewardCoefficientRequest)
      returns (QueryRewardCoefficientResponse) {
    option (google.api.http).get = "/haqq/coinomics/v1/reward_coefficient";
  }

  // Params retrieves coinomics moudle params.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/haqq/coinomics/v1/params";
  }
}

message QueryMaxSupplyRequest {}
message QueryMaxSupplyResponse {
  cosmos.base.v1beta1.Coin max_supply = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
}

message QueryRewardCoefficientRequest {}
message QueryRewardCoefficientResponse {
  // rate by which the total supply increases within one era
  string reward_coefficient = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message QueryParamsRequest {}
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}
