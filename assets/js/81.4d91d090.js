(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{631:function(e,t,a){"use strict";a.r(t);var o=a(1),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"adr-001-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adr-001-state"}},[e._v("#")]),e._v(" ADR 001: State")]),e._v(" "),a("h2",{attrs:{id:"changelog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[e._v("#")]),e._v(" Changelog")]),e._v(" "),a("ul",[a("li",[e._v("2021-06-14: updates after implementation")]),e._v(" "),a("li",[e._v("2021-05-15: first draft")])]),e._v(" "),a("h2",{attrs:{id:"status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[e._v("#")]),e._v(" Status")]),e._v(" "),a("p",[e._v("PROPOSED, Implemented")]),e._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),a("p",[e._v("The current ADR proposes a state machine breaking change to the EVM module state operations\n("),a("code",[e._v("Keeper")]),e._v(", "),a("code",[e._v("StateDB")]),e._v(" and "),a("code",[e._v("StateTransition")]),e._v(") with the goal of reducing code maintenance, increase\nperformance, and document all the transaction and state cycles and flows.")]),e._v(" "),a("h2",{attrs:{id:"context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[e._v("#")]),e._v(" Context")]),e._v(" "),a("p",[e._v("This ADR addresses the issues of 3 different components of the EVM state: the "),a("code",[e._v("StateDB")]),e._v(" interface,\nthe live "),a("code",[e._v("stateObject")]),e._v(" accounts, and the "),a("code",[e._v("StateTransition")]),e._v(" functionality. These issues are outlined\nbelow in the section for each corresponding component:")]),e._v(" "),a("h3",{attrs:{id:"statedb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statedb"}},[e._v("#")]),e._v(" "),a("code",[e._v("StateDB")])]),e._v(" "),a("p",[e._v("In order to execute state transitions, the EVM receives a reference to a database interface to\nperform CRUD operations on accounts, balances, code and state storage, among other state queries.\nThis database interface is defined by go-ethereum's "),a("code",[e._v("vm.StateDB")]),e._v(", which is currently implemented\nusing the "),a("code",[e._v("CommitStateDB")]),e._v(" concrete type.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("CommitStateDB")]),e._v(" performs state updates by having a direct access to the "),a("code",[e._v("sdk.Context")]),e._v(", the evm's\n"),a("code",[e._v("sdk.StoreKey")]),e._v(" and external "),a("code",[e._v("Keepers")]),e._v(" for account and balances. Currently, the context field needs\nto be set on every block or state transition using "),a("code",[e._v("WithContext(ctx)")]),e._v(" in order to pass the updated\nblock and transaction data to the "),a("code",[e._v("CommitStateDB")]),e._v(".")]),e._v(" "),a("p",[e._v("However, traditionally in Cosmos SDK-based chains, the "),a("code",[e._v("Keeper")]),e._v(" type has been the de-facto abstraction\nthat manages access the key-value store ("),a("code",[e._v("KVStore")]),e._v(") owned by the module through the store key.\n"),a("code",[e._v("Keepers")]),e._v(" usually hold a reference to external module "),a("code",[e._v("Keepers")]),e._v(" to perform functionality outside of\nthe scope of their module.")]),e._v(" "),a("p",[e._v("In the existing architecture of the EVM module, both "),a("code",[e._v("CommitStateDB")]),e._v(" and "),a("code",[e._v("Keeper")]),e._v(" have access to\nstate.")]),e._v(" "),a("h3",{attrs:{id:"state-objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-objects"}},[e._v("#")]),e._v(" State Objects")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("CommitStateDB")]),e._v(" also holds references of "),a("code",[e._v("stateObjects")]),e._v(', defined as "live ethereum consensus\naccounts (i.e any balance, account nonces or storage) which will get modified while processing a\nstate transition".')]),e._v(" "),a("p",[e._v("Upon a state transition, these objects will be modified and marked as 'dirty' (a.k.a stateless\nupdate) on the "),a("code",[e._v("CommitStateDB")]),e._v(". Then, at every "),a("code",[e._v("EndBlock")]),e._v(", the state of these modified objects will\nbe 'finalized' and committed to the store, resetting all the dirty list of objects.")]),e._v(" "),a("p",[e._v("The core issue arises when a chain that uses the EVM module can have also have their account and\nbalances updated through operations from other modules. This means that an EVM state object can be\nmodified through an EVM transaction ("),a("code",[e._v("evm.MsgEthereumTx")]),e._v(") and other transactions like "),a("code",[e._v("bank.MsgSend")]),e._v("\nor "),a("code",[e._v("ibctransfer.MsgTransfer")]),e._v(". This can lead to unexpected behaviors like state overwrites, due to\nthe current behavior that caches the dirty state on the EVM instead of committing any changes\ndirectly.")]),e._v(" "),a("h3",{attrs:{id:"state-transition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-transition"}},[e._v("#")]),e._v(" State Transition")]),e._v(" "),a("p",[e._v("A general EVM state transition is performed by calling the ethereum "),a("code",[e._v("vm.EVM")]),e._v(" "),a("code",[e._v("Create")]),e._v(" or "),a("code",[e._v("Call")]),e._v(" functions, depending on whether the transaction creates a contract or performs a transfer or call to a given contract.")]),e._v(" "),a("p",[e._v("In the case of the "),a("code",[e._v("x/evm")]),e._v(" module, it currently uses a modified version of Geth's "),a("code",[e._v("TransitionDB")]),e._v(", that wraps these two "),a("code",[e._v("vm.EVM")]),e._v(" methods. The reason for using this modified function, is due to several reasons:")]),e._v(" "),a("ol",[a("li",[e._v("The use of "),a("code",[e._v("sdk.Msg")]),e._v(" ("),a("code",[e._v("MsgEthereumTx")]),e._v(") instead of the ethereum "),a("code",[e._v("core.Message")]),e._v(" type for the "),a("code",[e._v("vm.EVM")]),e._v(" functions, preventing the direct use of the "),a("code",[e._v("core.ApplyMessage")]),e._v(".")]),e._v(" "),a("li",[e._v("The use of custom gas accounting through the transaction "),a("code",[e._v("GasMeter")]),e._v(" available on the "),a("code",[e._v("sdk.Context")]),e._v(" to consume the same amount of gas as on Ethereum.")]),e._v(" "),a("li",[e._v("Simulate logic via ABCI "),a("code",[e._v("CheckTx")]),e._v(", that prevents the state from being finalized.")])]),e._v(" "),a("h2",{attrs:{id:"decision"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decision"}},[e._v("#")]),e._v(" Decision")]),e._v(" "),a("h3",{attrs:{id:"statedb-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statedb-2"}},[e._v("#")]),e._v(" "),a("code",[e._v("StateDB")])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("CommitStateDB")]),e._v(" type will be removed in favor turning the module's "),a("code",[e._v("Keeper")]),e._v(" into a "),a("code",[e._v("StateDB")]),e._v("\nconcrete implementation.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gS2VlcGVyIG5vdyBmdWxseSBpbXBsZW1lbnRzIHRoZSBTdGF0ZURCIGludGVyZmFjZQp2YXIgXyB2bS5TdGF0ZURCID0gKCpLZWVwZXIpKG5pbCkKCi8vIEtlZXBlciBkZWZpbmVzIHRoZSBFVk0gbW9kdWxlIHN0YXRlIGtlZXBlciBmb3IgQ1JVRCBvcGVyYXRpb25zLiAKLy8gSXQgYWxzbyBpbXBsZW1lbnRzIHRoZSBnby1ldGhlcmV1bSB2bS5TdGF0ZURCIGludGVyZmFjZS4gSW5zdGVhZCBvZiB1c2luZwovLyBhIHRyaWUgYW5kIGRhdGFiYXNlIGZvciBxdWVyeWluZyBhbmQgcGVyc2lzdGVuY2UsIHRoZSBLZWVwZXIgdXNlcyBLVlN0b3JlcwovLyBhbmQgZXh0ZXJuYWwgS2VlcGVycyB0byBmYWNpbGl0YXRlIHN0YXRlIHRyYW5zaXRpb25zIGZvciBhY2NvdW50cyBhbmQgYmFsYW5jZQovLyBhY2NvdW50aW5nLgp0eXBlIEtlZXBlciBzdHJ1Y3QgewogIC8vIHN0b3JlIGtleSBhbmQgZW5jb2RpbmcgY29kZWMKICAvLyBleHRlcm5hbCBtb2R1bGUga2VlcGVycyAoYWNjb3VudCwgYmFuaywgZXRjKSBhbmQgcGFyYW1zIHN1YnNwYWNlCiAgLy8gY2FjaGUgZmllbGRzIGFuZCBzZGsuQ29udGV4dCAocmVzZXQgZXZlcnkgYmxvY2spCiAgLy8gb3RoZXIgQ29tbWl0U3RhdGVEQiBmaWVsZHMgKGpvdXJuYWwsIGFjY2Vzc0xpc3QsIGV0YykKfQo="}}),e._v(" "),a("p",[e._v("This means that a "),a("code",[e._v("Keeper")]),e._v(" pointer will now directly be passed to the "),a("code",[e._v("vm.EVM")]),e._v(" for accessing the state and performing state transitions.")]),e._v(" "),a("p",[e._v("The ABCI "),a("code",[e._v("BeginBlock")]),e._v(" and "),a("code",[e._v("EndBlock")]),e._v(" are have now been refactored to only keep track of internal fields (hashes, block bloom, etc).")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyAoayAqS2VlcGVyKSBCZWdpbkJsb2NrKGN0eCBzZGsuQ29udGV4dCwgcmVxIGFiY2kuUmVxdWVzdEJlZ2luQmxvY2spIHsKICAvLyAuLi4KCiAgLy8gdXBkYXRlIGNvbnRleHQKICBrLldpdGhDb250ZXh0KGN0eCkKICAvLy4uLgp9CgpmdW5jIChrIEtlZXBlcikgRW5kQmxvY2soY3R4IHNkay5Db250ZXh0LCByZXEgYWJjaS5SZXF1ZXN0RW5kQmxvY2spIFtdYWJjaS5WYWxpZGF0b3JVcGRhdGUgewogIC8vIE5PVEU6IFVwZGF0ZUFjY291bnRzLCBDb21taXQgYW5kIFJlc2V0IGV4ZWN1dGlvbiBzdGVwcyBoYXZlIGJlZW4gcmVtb3ZlZCBpbiBmYXZvciBvZiBkaXJlY3RseQogIC8vIHVwZGF0aW5nIHRoZSBzdGF0ZS4KCiAgLy8gR2FzIGNvc3RzIGFyZSBoYW5kbGVkIHdpdGhpbiBtc2cgaGFuZGxlciBzbyBjb3N0cyBzaG91bGQgYmUgaWdub3JlZAogIGluZkN0eCA6PSBjdHguV2l0aEdhc01ldGVyKHNkay5OZXdJbmZpbml0ZUdhc01ldGVyKCkpCiAgay5XaXRoQ29udGV4dChjdHgpCgogIC8vIGdldCB0aGUgYmxvY2sgYmxvb20gYnl0ZXMgZnJvbSB0aGUgdHJhbnNpZW50IHN0b3JlIGFuZCBzZXQgaXQgdG8gdGhlIHBlcnNpc3RlbnQgc3RvcmFnZQogIGJsb29tQmlnLCBmb3VuZCA6PSBrLkdldEJsb2NrQmxvb21UcmFuc2llbnQoKQogIGlmICFmb3VuZCB7CiAgICBibG9vbUJpZyA9IGJpZy5OZXdJbnQoMCkKICB9CgogIGJsb29tIDo9IGV0aHR5cGVzLkJ5dGVzVG9CbG9vbShibG9vbUJpZy5CeXRlcygpKQogIGsuU2V0QmxvY2tCbG9vbShpbmZDdHgsIHJlcS5IZWlnaHQsIGJsb29tKQogIGsuV2l0aENvbnRleHQoY3R4KQoKICByZXR1cm4gW11hYmNpLlZhbGlkYXRvclVwZGF0ZXt9Cn0K"}}),e._v(" "),a("p",[e._v("The new "),a("code",[e._v("StateDB")]),e._v(" ("),a("code",[e._v("Keeper")]),e._v(") will adopt the use of the  "),a("a",{attrs:{href:"https://docs.cosmos.network/master/core/store.html#transient-store",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("TransientStore")]),a("OutboundLink")],1),e._v(" that discards the existing values of the store when the block is commited.")]),e._v(" "),a("p",[e._v("The fields that have been modified to use the "),a("code",[e._v("TransientStore")]),e._v(" are:")]),e._v(" "),a("ul",[a("li",[e._v("Block bloom filter (cleared at the end of every block)")]),e._v(" "),a("li",[e._v("Tx index (updated on every transaction)")]),e._v(" "),a("li",[e._v("Gas amount refunded (updated on every transaction)")]),e._v(" "),a("li",[e._v("Suicided account (cleared at the end of every block)")]),e._v(" "),a("li",[a("code",[e._v("AccessList")]),e._v(" address and slot (cleared at the end of every block)")])]),e._v(" "),a("h3",{attrs:{id:"state-objects-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-objects-2"}},[e._v("#")]),e._v(" State Objects")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("stateObject")]),e._v(" type will be completely removed in favor of updating the store directly through\nthe use of the auth "),a("code",[e._v("AccountKeeper")]),e._v(" and the bank "),a("code",[e._v("Keeper")]),e._v(". For the storage "),a("code",[e._v("State")]),e._v(" and "),a("code",[e._v("Code")]),e._v(", the\nevm module "),a("code",[e._v("Keeper")]),e._v(" will store these values directly on the KVStore using the EVM module store key\nand corresponding prefix keys.")]),e._v(" "),a("h3",{attrs:{id:"state-transition-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-transition-2"}},[e._v("#")]),e._v(" State Transition")]),e._v(" "),a("p",[e._v("The state transition logic will be refactored to use the "),a("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/blob/v1.10.3/core/state_processor.go#L137-L150",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("ApplyTransaction")]),a("OutboundLink")],1),e._v(" function from the "),a("code",[e._v("core")]),e._v("\npackage of go-ethereum as reference. This method calls creates a go-ethereum "),a("code",[e._v("StateTransition")]),e._v("\ninstance and, as it name implies, applies a Ethereum message to execute it and update the state.\nThis "),a("code",[e._v("ApplyMessage")]),e._v(" call will be wrapped in the "),a("code",[e._v("Keeper")]),e._v("'s "),a("code",[e._v("ApplyTransaction")]),e._v(" function, which will\ngenerate the required arguments for this call (EVM, "),a("code",[e._v("core.Message")]),e._v(", chain config, and gas pool), thus performing the\nsame gas accounting as before.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyAoayAqS2VlcGVyKSBBcHBseVRyYW5zYWN0aW9uKHR4ICpldGh0eXBlcy5UcmFuc2FjdGlvbikgKCp0eXBlcy5Nc2dFdGhlcmV1bVR4UmVzcG9uc2UsIGVycm9yKSB7CiAvLyAuLi4KICBjZmcsIGZvdW5kIDo9IGsuR2V0Q2hhaW5Db25maWcoaW5mQ3R4KQogIGlmICFmb3VuZCB7CiAgICAvLyByZXR1cm4gZXJyb3IKICB9CgogIGV0aENmZyA6PSBjZmcuRXRoZXJldW1Db25maWcoY2hhaW5JRCkKCiAgc2lnbmVyIDo9IE1ha2VTaWduZXIoZXRoQ2ZnLCBoZWlnaHQpCgogIG1zZywgZXJyIDo9IHR4LkFzTWVzc2FnZShzaWduZXIpCiAgaWYgZXJyICE9IG5pbCB7CiAgIC8vIHJldHVybiBlcnJvcgogIH0KCiAgZXZtIDo9IGsuTmV3RVZNKG1zZywgZXRoQ2ZnKQoKICBrLkluY3JlYXNlVHhJbmRleFRyYW5zaWVudCgpCgogIC8vIGNyZWF0ZSBhbiBldGhlcmV1bSBTdGF0ZVRyYW5zaXRpb24gaW5zdGFuY2UgYW5kIHJ1biBUcmFuc2l0aW9uRGIKICByZXMsIGVyciA6PSBrLkFwcGx5TWVzc2FnZShldm0sIG1zZywgZXRoQ2ZnKQogIGlmIGVyciAhPSBuaWwgewogICAgLy8gcmV0dXJuIGVycm9yCiAgfQoKICAvLyAuLi4KCiAgcmV0dXJuIHJlcywgbmlsCn0K"}}),e._v(" "),a("p",[a("code",[e._v("ApplyMessage")]),e._v(" computes the new state by applying the given message against the existing state. If\nthe message fails, the VM execution error with the reason will be returned to the client and the\ntransaction won't be committed to the store.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyAoayAqS2VlcGVyKSBBcHBseU1lc3NhZ2UoZXZtICp2bS5FVk0sIG1zZyBjb3JlLk1lc3NhZ2UsIGNmZyAqcGFyYW1zLkNoYWluQ29uZmlnKSAoKnR5cGVzLk1zZ0V0aGVyZXVtVHhSZXNwb25zZSwgZXJyb3IpIHsKICB2YXIgKAogICAgcmV0ICAgW11ieXRlIC8vIHJldHVybiBieXRlcyBmcm9tIGV2bSBleGVjdXRpb24KICAgIHZtRXJyIGVycm9yICAvLyB2bSBlcnJvcnMgZG8gbm90IGVmZmVjdCBjb25zZW5zdXMgYW5kIGFyZSB0aGVyZWZvcmUgbm90IGFzc2lnbmVkIHRvIGVycgogICkKCiAgc2VuZGVyIDo9IHZtLkFjY291bnRSZWYobXNnLkZyb20oKSkKICBjb250cmFjdENyZWF0aW9uIDo9IG1zZy5UbygpID09IG5pbAoKICAvLyB0cmFuc2FjdGlvbiBnYXMgbWV0ZXIgKHRyYWNrcyBsaW1pdCBhbmQgdXNhZ2UpCiAgZ2FzQ29uc3VtZWQgOj0gay5jdHguR2FzTWV0ZXIoKS5HYXNDb25zdW1lZCgpCiAgbGVmdG92ZXJHYXMgOj0gay5jdHguR2FzTWV0ZXIoKS5MaW1pdCgpIC0gay5jdHguR2FzTWV0ZXIoKS5HYXNDb25zdW1lZFRvTGltaXQoKQoKICAvLyBOT1RFOiBTaW5jZSBDUlVEIG9wZXJhdGlvbnMgb24gdGhlIFNESyBzdG9yZSBjb25zdW1lIGdhcyB3ZSBuZWVkIHRvIHNldCB1cCBhbiBpbmZpbml0ZSBnYXMgbWV0ZXIgc28gdGhhdCB3ZSBvbmx5IGNvbnN1bWUKICAvLyB0aGUgZ2FzIHVzZWQgYnkgdGhlIEV0aGVyZXVtIG1lc3NhZ2UgZXhlY3V0aW9uLgogIC8vIE5vdCBzZXR0aW5nIHRoZSBpbmZpbml0ZSBnYXMgbWV0ZXIgaGVyZSB3b3VsZCBtZWFuIHRoYXQgd2UgYXJlIGluY3VycmluZyBpbiBhZGRpdGlvbmFsIGdhcyBjb3N0cwogIGsuV2l0aENvbnRleHQoay5jdHguV2l0aEdhc01ldGVyKHNkay5OZXdJbmZpbml0ZUdhc01ldGVyKCkpKQoKICAvLyBOT1RFOiBnYXMgbGltaXQgaXMgdGhlIEdhc0xpbWl0IGRlZmluZWQgaW4gdGhlIG1lc3NhZ2UgbWludXMgdGhlIEludHJpbnNpYyBHYXMgdGhhdCBoYXMgYWxyZWFkeSBiZWVuCiAgLy8gY29uc3VtZWQgb24gdGhlIEFudGVIYW5kbGVyLgoKICAvLyBlbnN1cmUgZ2FzIGlzIGNvbnNpc3RlbnQgZHVyaW5nIENoZWNrVHgKICBpZiBrLmN0eC5Jc0NoZWNrVHgoKSB7CiAgICAvLyBjaGVjayBnYXMgY29uc3VtcHRpb24gY29ycmVjdG5lc3MKICB9CgogIGlmIGNvbnRyYWN0Q3JlYXRpb24gewogICAgcmV0LCBfLCBsZWZ0b3Zlckdhcywgdm1FcnIgPSBldm0uQ3JlYXRlKHNlbmRlciwgbXNnLkRhdGEoKSwgbGVmdG92ZXJHYXMsIG1zZy5WYWx1ZSgpKQogIH0gZWxzZSB7CiAgICByZXQsIGxlZnRvdmVyR2FzLCB2bUVyciA9IGV2bS5DYWxsKHNlbmRlciwgKm1zZy5UbygpLCBtc2cuRGF0YSgpLCBsZWZ0b3ZlckdhcywgbXNnLlZhbHVlKCkpCiAgfQoKICAvLyByZWZ1bmQgZ2FzIHByaW9yIHRvIGhhbmRsaW5nIHRoZSB2bSBlcnJvciBpbiBvcmRlciB0byBzZXQgdGhlIHVwZGF0ZWQgZ2FzIG1ldGVyCiAgaWYgZXJyIDo9IGsuUmVmdW5kR2FzKG1zZywgbGVmdG92ZXJHYXMpOyBlcnIgIT0gbmlsIHsKICAgIC8vIHJldHVybiBlcnJvcgogIH0KCiAgaWYgdm1FcnIgIT0gbmlsIHsKICAgIGlmIGVycm9ycy5Jcyh2bUVyciwgdm0uRXJyRXhlY3V0aW9uUmV2ZXJ0ZWQpIHsKICAgICAgLy8gcmV0dXJuIGVycm9yIHdpdGggcmV2ZXJ0IHJlYXNvbgogICAgfQoKICAgIC8vIHJldHVybiBleGVjdXRpb24gZXJyb3IKICB9CgogIHJldHVybiAmYW1wO3R5cGVzLk1zZ0V0aGVyZXVtVHhSZXNwb25zZXsKICAgIFJldDogICAgICByZXQsCiAgICBSZXZlcnRlZDogZmFsc2UsCiAgfSwgbmlsCn0K"}}),e._v(" "),a("p",[e._v("The EVM is created as follows:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyAoayAqS2VlcGVyKSBOZXdFVk0obXNnIGNvcmUuTWVzc2FnZSwgY29uZmlnICpwYXJhbXMuQ2hhaW5Db25maWcpICp2bS5FVk0gewogIGJsb2NrQ3R4IDo9IHZtLkJsb2NrQ29udGV4dHsKICAgIENhblRyYW5zZmVyOiBjb3JlLkNhblRyYW5zZmVyLAogICAgVHJhbnNmZXI6ICAgIGNvcmUuVHJhbnNmZXIsCiAgICBHZXRIYXNoOiAgICAgay5HZXRIYXNoRm4oKSwKICAgIENvaW5iYXNlOiAgICBjb21tb24uQWRkcmVzc3t9LCAvLyB0aGVyZSdzIG5vIGJlbmVmaWNpYXJ5IHNpbmNlIHdlJ3JlIG5vdCBtaW5pbmcKICAgIEdhc0xpbWl0OiAgICBnYXNMaW1pdCwKICAgIEJsb2NrTnVtYmVyOiBibG9ja0hlaWdodCwKICAgIFRpbWU6ICAgICAgICBibG9ja1RpbWUsCiAgICBEaWZmaWN1bHR5OiAgMCwgLy8gdW51c2VkLiBPbmx5IHJlcXVpcmVkIGluIFBvVyBjb250ZXh0CiAgfQoKICB0eEN0eCA6PSBjb3JlLk5ld0VWTVR4Q29udGV4dChtc2cpCiAgdm1Db25maWcgOj0gay5WTUNvbmZpZygpCgogIHJldHVybiB2bS5OZXdFVk0oYmxvY2tDdHgsIHR4Q3R4LCBrLCBjb25maWcsIHZtQ29uZmlnKQp9Cg=="}}),e._v(" "),a("h2",{attrs:{id:"consequences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consequences"}},[e._v("#")]),e._v(" Consequences")]),e._v(" "),a("h3",{attrs:{id:"backwards-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[e._v("#")]),e._v(" Backwards Compatibility")]),e._v(" "),a("p",[e._v("The proposed ADR is a breaking state machine change and will not have any backwards compatibility\nsince no chain that uses this code is in a production ready-state (at the moment of writing).")]),e._v(" "),a("h3",{attrs:{id:"positive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#positive"}},[e._v("#")]),e._v(" Positive")]),e._v(" "),a("ul",[a("li",[e._v("Improve maintenance by simplifying the state transition logic")]),e._v(" "),a("li",[e._v("Defines a single option for accessing the store through the "),a("code",[e._v("Keeper")]),e._v(", thus removing the\n"),a("code",[e._v("CommitStateDB")]),e._v(" type.")]),e._v(" "),a("li",[e._v("State operations and tests are now all located in the "),a("code",[e._v("evm/keeper/")]),e._v(" package")]),e._v(" "),a("li",[e._v("Removes the concept of "),a("code",[e._v("stateObject")]),e._v(" by committing to the store directly")]),e._v(" "),a("li",[e._v("Delete operations on "),a("code",[e._v("EndBlock")]),e._v(" for updating and committing dirty state objects.")]),e._v(" "),a("li",[e._v("Split the state transition functionality to modularize components that can be beneficial for further customization (eg: using an alternative EVM)")])]),e._v(" "),a("h3",{attrs:{id:"negative"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#negative"}},[e._v("#")]),e._v(" Negative")]),e._v(" "),a("ul",[a("li",[e._v("Increases the dependency of external packages (eg: "),a("code",[e._v("go-ethereum")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"neutral"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#neutral"}},[e._v("#")]),e._v(" Neutral")]),e._v(" "),a("ul",[a("li",[e._v("Some of the fields from the "),a("code",[e._v("CommitStateDB")]),e._v(" will have to be added to the "),a("code",[e._v("Keeper")])]),e._v(" "),a("li",[e._v("Some state changes will have to be kept in store (eg: suicide state)")])]),e._v(" "),a("h2",{attrs:{id:"further-discussions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#further-discussions"}},[e._v("#")]),e._v(" Further Discussions")]),e._v(" "),a("h2",{attrs:{id:"test-cases-optional"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-cases-optional"}},[e._v("#")]),e._v(" Test Cases [optional]")]),e._v(" "),a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")])],1)}),[],!1,null,null,null);t.default=s.exports}}]);